#Prefix Key
unbind C-b
set -g prefix C-f
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

#shortcut to source/reload the tmux.conf file
bind-key r source-file ~/dotfiles/tmux.conf \; display-message "~~~~~~~~~ RELOADED! ~~~~~~~~~~"


#--------------------------------------------------
# COLORS
#--------------------------------------------------
set-option -g default-terminal "screen-256color"
set -g status-bg '#666666'


#--------------------------------------------------
# Status bars
#--------------------------------------------------
set -g status-left-length 50
set -g status-right "  %m-%d %I:%M%p "


#--------------------------------------------------
# Panes
#--------------------------------------------------
bind-key - split-window -v -c '#{pane_current_path}' \; display-message "PWD = #{pane_current_path}"
bind-key \ split-window -h -c '#{pane_current_path}' \; display-message "PWD = #{pane_current_path}"
bind c new-window -c '#{pane_current_path}' \; display-message "PWD = #{pane_current_path}"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Shift + d (to switch ergodox layer) H/J/K/L
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 2
bind -n C-Right resize-pane -R 2
bind -n C-Down resize-pane -D 1
bind -n C-Up resize-pane -U 1

#Toggle zoom
bind-key = resize-pane -Z

#Break pane into it's own detached window
bind-key b break-pane -d


#--------------------------------------------------
# Windows
#--------------------------------------------------
bind c new-window -c '#{pane_current_path}'
set-option -g renumber-windows on

#<prefix><number> to jump to that window
#<prefix>l to jump to last active window
#<prefix>l to jump to last active window


#--------------------------------------------------
# Sessions
#--------------------------------------------------
#<previx>d - detach from current session
#<previx>L - jump to last active session
bind-key C-s choose-tree


#--------------------------------------------------
# Clipboard/Scrolling - Copy & Paste
#--------------------------------------------------
# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -g mouse on
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
